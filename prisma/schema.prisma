generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  vouchers  Voucher[]
}

model Voucher {
  id          String              @id @default(uuid())
  brandId     String
  brand       Brand               @relation(fields: [brandId], references: [id])
  name        String
  description String?
  pointCost   Int
  isActive    Boolean             @default(true)
  validUntil  DateTime?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  details     TransactionDetail[]
}

model Customer {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String
  pointBalance Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

model Transaction {
  id          String              @id @default(uuid())
  customerId  String
  customer    Customer            @relation(fields: [customerId], references: [id])
  totalPoints Int
  status      TransactionStatus   @default(PENDING)
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  details     TransactionDetail[]
}

model TransactionDetail {
  id            String      @id @default(uuid())
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  voucherId     String
  voucher       Voucher     @relation(fields: [voucherId], references: [id])
  quantity      Int
  pointCost     Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}
